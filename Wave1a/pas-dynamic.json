{"AWSTemplateFormatVersion":"2010-09-09","Description":"TPGT PASWS NPE dynamic stack. Creates an ALB, ASG, LT, CW Log Groups and Security Groups.","Parameters":{"ParamEnvName":{"Type":"String","Description":"Stack environment name","Default":"sit1","AllowedValues":["pt","dev","sit1","sit2","sit3"],"ConstraintDescription":"Allowed values are pt, sit1, sit2, sit3, dev."},"ParamVpc":{"Type":"String","Description":"VPC ID","Default":"vpc-0fd6d5d14dc0892d3"},"ParamKmsCmk":{"Type":"String","Description":"KMS CMK ARN for encryption","Default":"arn:aws:kms:ap-southeast-2:622637471932:key/023f4b13-51cf-4751-85d0-3674ecc06dc5"},"ParamPrivateSubnetIdA":{"Type":"String","Description":"Private subnet ID A","Default":"subnet-066d60832f0375988"},"ParamPrivateSubnetIdB":{"Type":"String","Description":"Private subnet ID B","Default":"subnet-079a7b411561406b0"},"ParamAcmCert":{"Type":"String","Description":"ACM certificate ARN for load balancers","Default":"arn:aws:acm:ap-southeast-2:622637471932:certificate/f7840391-091d-4829-8bbd-ab98552add75"},"ParamEc2IamProfile":{"Type":"String","Description":"IAM instance profile to use for ASGs","Default":"arn:aws:iam::622637471932:instance-profile/tpgt-sit1-pasws-application-role"},"ParamImageId":{"Type":"AWS::EC2::Image::Id","Description":"AMS Amazon Linux 2 base image AMI-ID","Default":"ami-060735c9d533aba4c"},"ParamHostedZone":{"Type":"String","Description":"Route 53 zone ID","Default":"Z09344211V6H6HP307FL8"}},"Mappings":{"Environments":{"pt":{"ASMAX":4,"ASMIN":2,"LogRetentionInDays":60,"VolumeSize":50,"InstanceType":"t2.medium","AZ1Subnet":"10.153.140.0/26","AZ2Subnet":"10.153.140.64/26"},"dev":{"ASMAX":2,"ASMIN":1,"LogRetentionInDays":7,"VolumeSize":30,"InstanceType":"t2.medium","AZ1Subnet":"10.153.140.0/26","AZ2Subnet":"10.153.140.64/26"},"sit1":{"ASMAX":2,"ASMIN":1,"LogRetentionInDays":7,"VolumeSize":30,"InstanceType":"t2.medium","AZ1Subnet":"10.153.140.0/26","AZ2Subnet":"10.153.140.64/26"},"sit2":{"ASMAX":2,"ASMIN":1,"LogRetentionInDays":7,"VolumeSize":30,"InstanceType":"t2.medium","AZ1Subnet":"10.153.140.0/26","AZ2Subnet":"10.153.140.64/26"},"sit3":{"ASMAX":2,"ASMIN":1,"LogRetentionInDays":7,"VolumeSize":30,"InstanceType":"t2.medium","AZ1Subnet":"10.153.140.0/26","AZ2Subnet":"10.153.140.64/26"}}},"Outputs":{"AlbUrl":{"Description":"App load balancer URL","Value":{"Fn::Join":["",["https://",{"Fn::GetAtt":["ApplicationLoadBalancer","DNSName"]}]]}},"LaunchTemplateId":{"Description":"Launch template ID","Value":{"Ref":"LaunchTemplate"}},"AutoScalingId":{"Description":"Auto scaling group ID","Value":{"Ref":"PASWSServerGroup"}},"AlbSecurityGroupId":{"Description":"Security group ID","Value":{"Ref":"AlbSecurityGroup"}},"Ec2SecurityGroupId":{"Description":"Security group ID","Value":{"Ref":"Ec2SecurityGroup"}},"Route53Alias":{"Description":"Route 53 alias record for ALB","Value":{"Ref":"LoadBalancerAlias"}}},"Resources":{"PASWSServerGroup":{"Type":"AWS::AutoScaling::AutoScalingGroup","CreationPolicy":{"ResourceSignal":{"Timeout":"PT15M","Count":{"Fn::FindInMap":["Environments",{"Ref":"ParamEnvName"},"ASMIN"]}}},"UpdatePolicy":{"AutoScalingRollingUpdate":{"MaxBatchSize":1,"MinInstancesInService":1,"PauseTime":"PT15M","WaitOnResourceSignals":true,"SuspendProcesses":["HealthCheck","ReplaceUnhealthy","AZRebalance","AlarmNotification","ScheduledActions"]}},"Properties":{"VPCZoneIdentifier":[{"Ref":"ParamPrivateSubnetIdA"},{"Ref":"ParamPrivateSubnetIdB"}],"HealthCheckGracePeriod":300,"HealthCheckType":"EC2","LaunchTemplate":{"LaunchTemplateId":{"Ref":"LaunchTemplate"},"Version":{"Fn::GetAtt":["LaunchTemplate","LatestVersionNumber"]}},"MinSize":{"Fn::FindInMap":["Environments",{"Ref":"ParamEnvName"},"ASMIN"]},"MaxSize":{"Fn::FindInMap":["Environments",{"Ref":"ParamEnvName"},"ASMAX"]},"TargetGroupARNs":[{"Ref":"ALBTargetGroup"}],"Tags":[{"Key":"Name","Value":{"Fn::Join":["-",["tpgt",{"Ref":"ParamEnvName"},"pasws","ec2"]]},"PropagateAtLaunch":true},{"Key":"Backup","Value":"false","PropagateAtLaunch":true},{"Key":"DataClassification","Value":"Highly Sensitive","PropagateAtLaunch":true},{"Key":"Role","Value":"AppServer","PropagateAtLaunch":true}]}},"ScalingPolicy":{"Type":"AWS::AutoScaling::ScalingPolicy","Properties":{"AutoScalingGroupName":{"Ref":"PASWSServerGroup"},"PolicyType":"TargetTrackingScaling","TargetTrackingConfiguration":{"PredefinedMetricSpecification":{"PredefinedMetricType":"ASGAverageCPUUtilization"},"TargetValue":75}}},"LaunchTemplate":{"Type":"AWS::EC2::LaunchTemplate","Properties":{"LaunchTemplateName":{"Fn::Join":["-",["tpgt",{"Ref":"ParamEnvName"},"pasws","launchtemplate"]]},"LaunchTemplateData":{"ImageId":{"Ref":"ParamImageId"},"InstanceType":{"Fn::FindInMap":["Environments",{"Ref":"ParamEnvName"},"InstanceType"]},"IamInstanceProfile":{"Arn":{"Ref":"ParamEc2IamProfile"}},"NetworkInterfaces":[{"DeviceIndex":0,"AssociatePublicIpAddress":false,"DeleteOnTermination":true,"Groups":[{"Ref":"Ec2SecurityGroup"}]}],"TagSpecifications":[{"ResourceType":"instance","Tags":[{"Key":"Name","Value":{"Fn::Join":["-",["tpgt",{"Ref":"ParamEnvName"},"pasws","launchtemplate"]]}}]}],"BlockDeviceMappings":[{"DeviceName":"/dev/xvda","Ebs":{"VolumeSize":{"Fn::FindInMap":["Environments",{"Ref":"ParamEnvName"},"VolumeSize"]},"VolumeType":"gp2","DeleteOnTermination":true,"Encrypted":true,"KmsKeyId":{"Ref":"ParamKmsCmk"}}}],"UserData":{"Fn::Base64":{"Fn::Sub":"#!/bin/bash\n# Enable console logging now that sensitive values have been retrieved\nexec \u003e \u003e(tee /var/log/user-data.log|logger -t user-data -s 2\u003e/dev/console) 2\u003e\u00261\nSTART\u003d$(date +%s);\n?# Set Secured Variables\n#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n# Get DB Credentials and store in Shell env variables utilized by PAS application ./bin/setenv.sh script\nexport NESSUS_KEY\u003d$(aws --region ap-southeast-2 ssm get-parameters --name tpgt-sit1-pasws-nessuskey --with-decryption --query \"Parameters[].{Val:Value}\" --output text)\n?# Get the latest CloudFormation package\nyum update -y aws-cfn-bootstrap\n?\n#Cloudwatch configuration\n#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\ncat \u003e/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent-custom.json \u003c\u003cEOL\n{\n  \"logs\": {\n    \"logs_collected\": {\n      \"files\": {\n        \"collect_list\": [\n          {\n            \"file_path\": \"/var/log/auth\",\n            \"log_group_name\": \"{instance_id}\",\n            \"log_stream_name\": \"/var/log/auth\",\n            \"timestamp_format\": \"%b %d %H:%M:%S\"\n          },\n          {\n            \"file_path\": \"/var/log/user-data.log\",\n            \"log_group_name\": \"{instance_id}\",\n            \"log_stream_name\": \"/var/log/user-data.log\",\n            \"timestamp_format\": \"%b %d %H:%M:%S\"\n          },\n          {\n            \"file_path\": \"/opt/tomcat/logs/localhost_access_log.*.txt\",\n            \"log_group_name\": \"{instance_id}\",\n            \"log_stream_name\": \"/opt/tomcat/logs/localhost_access_log.txt\",\n            \"timestamp_format\": \"%b %d %H:%M:%S\"\n          },\n          {\n            \"file_path\": \"/opt/tomcat/logs/localhost.*.log\",\n            \"log_group_name\": \"{instance_id}\",\n            \"log_stream_name\": \"/opt/tomcat/logs/localhost.log\",\n            \"timestamp_format\": \"%b %d %H:%M:%S\"\n          },\n          {\n            \"file_path\": \"/opt/tomcat/logs/catalina.*.log\",\n            \"log_group_name\": \"{instance_id}\",\n            \"log_stream_name\": \"/opt/tomcat/logs/catalina.log\",\n            \"timestamp_format\": \"%b %d %H:%M:%S\"\n          },\n          {\n            \"file_path\": \"/opt/tomcat/logs/localhost_access_log.*.txt\",\n            \"log_group_name\": \"customer-pasws-sit1-tomcat-localhost-access-log\",\n            \"log_stream_name\": \"{instance_id}\",\n            \"timestamp_format\": \"%b %d %H:%M:%S\"\n          },\n          {\n            \"file_path\": \"/opt/tomcat/logs/localhost.*.log\",\n            \"log_group_name\": \"customer-pasws-sit1-tomcat-localhost-log\",\n            \"log_stream_name\": \"{instance_id}\",\n            \"timestamp_format\": \"%b %d %H:%M:%S\"\n          },\n          {\n            \"file_path\": \"/opt/tomcat/logs/catalina.*.log\",\n            \"log_group_name\": \"customer-pasws-sit1-tomcat-catalina-log\",\n            \"log_stream_name\": \"{instance_id}\",\n            \"timestamp_format\": \"%b %d %H:%M:%S\"\n          },\n          {\n            \"file_path\": \"/opt/log/pasws/pasws.log\",\n            \"log_group_name\": \"customer-pasws-sit1-application-log\",\n            \"log_stream_name\": \"{instance_id}\",\n            \"timestamp_format\": \"%b %d %H:%M:%S\"\n          }\n        ]\n      }\n    }\n  }\n}\n?\nEOL\nsudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a append-config -m ec2 -s -c file:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent-custom.json\n?\n#Splunk Installation\n#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\ncd ~/\naws s3 cp s3://tpgt-sit1-pasws-s3-app/splunkforwarder-8.0.5-Linux-x86_64.tgz /opt/ \u0026\u0026 cd /opt\ntar -xvzf splunkforwarder-8.0.5-Linux-x86_64.tgz\naws s3 cp s3://tpgt-sit1-pasws-s3-app/pasws-np-splunk-config.zip /opt/ \u0026\u0026 unzip pasws-np-splunk-config.zip\ncd pasws-np-splunk-config/ \u0026\u0026 cp -rp vha_all_deploymentclient vha_pasws_uf_config /opt/splunkforwarder/etc/apps\nsudo /opt/splunkforwarder/bin/splunk start --accept-license --answer-yes --no-prompt --seed-passwd mypassword\n?\n#Taneble agent installation\n#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\ncd ~/\naws s3 cp s3://tpgt-sit1-pasws-s3-app/NessusAgent-8.0.0-amzn.x86_64.rpm .\nsudo yum -y install NessusAgent-8.0.0-amzn.x86_64.rpm\n?\n# Hide Nessus key value in sub-script\ncat \u003enessusStart.sh \u003c\u003cEOL\n#!/bin/bash\n/opt/nessus_agent/sbin/nessuscli agent link --key\u003d\"$NESSUS_KEY\" --host\u003dcloud.tenable.com --port\u003d443\n?\nEOL\nchmod +x nessusStart.sh\n./nessusStart.sh\n?\n/sbin/service nessusagent start\n?\n#FireEye installation\n#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\ncd ~/\nmkdir -p /opt/fireeye\naws s3 cp s3://tpgt-sit1-pasws-s3-app/IMAGE_HX_AGENT_LINUX_30.19.6.tgz IMAGE_HX_AGENT_LINUX_30.19.6.tgz\ntar -xvzf IMAGE_HX_AGENT_LINUX_30.19.6.tgz\nmv xagt-30.19.6-1.el7.x86_64.rpm agent_config.json /opt/fireeye \u0026\u0026 cd /opt/fireeye/\nsudo yum -y install xagt-30.19.6-1.el7.x86_64.rpm\nsudo /opt/fireeye/bin/xagt -i /opt/fireeye/agent_config.json\nsudo systemctl start xagt \u0026\u0026 sudo systemctl enable xagt\n?\n# EFS Configuration\n#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nyum -y install amazon-efs-utils\nmkdir -p /home/ec2-user/efs-mount-point\n?\nEFS_TARGET\u003d$(aws --region ap-southeast-2 ssm get-parameters --name tpgt-sit1-pasws-efstarget --query \"Parameters[].{Val:Value}\" --output text)\nEFS_IP\u003d$(dig @169.254.169.253 +short $EFS_TARGET | head -n 1)\nEFS_FS_ID\u003d$(echo $EFS_TARGET | grep -oP \"[^.]*\" | head -n 1)\necho \"$EFS_IP $EFS_TARGET\" \u003e\u003e /etc/hosts\n?\nmount -t efs -o tls \"$EFS_FS_ID:/\" /home/ec2-user/efs-mount-point\n?\n#Application Installation\n#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\namazon-linux-extras install java-openjdk11 -y\n?\n?\ncd /opt\naws s3 cp s3://tpgt-sit1-pasws-s3-app/pasws-package-v.1.0.zip pasws-package-v.1.0.zip\nunzip /opt/pasws-package-v.1.0.zip\nmv pasws-package-v.1.0 tomcat\ncd /opt/tomcat/bin\n?\nkeytool -genkeypair -noprompt -alias web.sit1.npe.pasws.aws.vodafone.com.au -keyalg RSA -validity 365 -keystore paswskey.jks -keypass params -storepass params -dname \"CN\u003dweb.sit1.npe.pasws.aws.vodafone.com.au, OU\u003dCIO, O\u003dVHA, L\u003dSydney, ST\u003dNew South Wales, C\u003dAU\"\nmv -f paswskey.jks /opt/tomcat/conf\n?\nchmod +x startup.sh\nchmod +x shutdown.sh\nln -s /opt/tomcat/bin/startup.sh /usr/local/bin/tomcatup\nln -s /opt/tomcat/bin/shutdown.sh /usr/local/bin/tomcatdown\nchmod +x catalina.sh\ntomcatup\n?\n#Healthcheck\n#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nrc\u003d$?\nsleep 15\nstatus\u003d\"$(curl -Is http://127.0.0.1:8080/#/ | head -n 1 | awk \u0027{print $2}\u0027)\"\n?\n# checking for tomcat and cloudwatch service\nif [ \"$status\" \u003d\u003d 200 ] \u0026\u0026 [ \"$rc\" -eq 0 ]; then\n?\n# All done so signal success\n/opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource PASWSServerGroup --region ${AWS::Region}\nfi\nEND\u003d$(date +%s);\necho $((END-START)) | awk \u0027{print int($1/60)\":\"int($1%60)}\u0027"}}}}},"TomcatAccessLogGroup":{"Type":"AWS::Logs::LogGroup","Properties":{"LogGroupName":{"Fn::Sub":"customer-pasws-${ParamEnvName}-tomcat-localhost-access-log"},"RetentionInDays":{"Fn::FindInMap":["Environments",{"Ref":"ParamEnvName"},"LogRetentionInDays"]}}},"TomcatserverLogGroup":{"Type":"AWS::Logs::LogGroup","Properties":{"LogGroupName":{"Fn::Sub":"customer-pasws-${ParamEnvName}-tomcat-localhost-log"},"RetentionInDays":{"Fn::FindInMap":["Environments",{"Ref":"ParamEnvName"},"LogRetentionInDays"]}}},"CatalinaLogGroup":{"Type":"AWS::Logs::LogGroup","Properties":{"LogGroupName":{"Fn::Sub":"customer-pasws-${ParamEnvName}-tomcat-catalina-log"},"RetentionInDays":{"Fn::FindInMap":["Environments",{"Ref":"ParamEnvName"},"LogRetentionInDays"]}}},"ApplicationLogGroup":{"Type":"AWS::Logs::LogGroup","Properties":{"LogGroupName":{"Fn::Sub":"customer-pasws-${ParamEnvName}-application-log"},"RetentionInDays":{"Fn::FindInMap":["Environments",{"Ref":"ParamEnvName"},"LogRetentionInDays"]}}},"404MetricFilter":{"Type":"AWS::Logs::MetricFilter","Properties":{"LogGroupName":{"Ref":"TomcatAccessLogGroup"},"FilterPattern":"[ip, identity, user_id, timestamp, request, status_code \u003d 4*, size]","MetricTransformations":[{"MetricValue":"1","MetricNamespace":"tomcatserver/404s","MetricName":"400ErrorCount"}]}},"404Alarm":{"Type":"AWS::CloudWatch::Alarm","Properties":{"AlarmDescription":"The number of 404s is greater than 2 over 2 minutes","MetricName":"400ErrorCount","Namespace":"tomcatserver/404s","Statistic":"Sum","Period":60,"EvaluationPeriods":1,"Threshold":1,"ComparisonOperator":"GreaterThanThreshold"}},"Ec2SecurityGroup":{"Type":"AWS::EC2::SecurityGroup","DependsOn":"AlbSecurityGroup","Properties":{"GroupDescription":"Security group applied to PAS EC2 instances","VpcId":{"Ref":"ParamVpc"},"Tags":[{"Key":"Name","Value":{"Fn::Join":["-",["tpgt",{"Ref":"ParamEnvName"},"pasws","ec2secgrp"]]}}],"SecurityGroupIngress":[{"IpProtocol":"tcp","FromPort":22,"ToPort":22,"Description":"Allow SSH from bastions 1","CidrIp":"10.153.2.192/26"},{"IpProtocol":"tcp","FromPort":22,"ToPort":22,"Description":"Allow SSH from bastions 2","CidrIp":"10.153.3.0/26"},{"IpProtocol":"tcp","FromPort":22,"ToPort":22,"Description":"Allow SSH from bastions 3","CidrIp":"10.153.3.64/26"},{"IpProtocol":"tcp","FromPort":8443,"ToPort":8443,"Description":"Allow HTTPS from ALB","SourceSecurityGroupId":{"Fn::GetAtt":["AlbSecurityGroup","GroupId"]}}]}},"AlbSecurityGroup":{"Type":"AWS::EC2::SecurityGroup","Properties":{"GroupDescription":"Security group applied to PAS application load balancer","VpcId":{"Ref":"ParamVpc"},"Tags":[{"Key":"Name","Value":{"Fn::Join":["-",["tpgt",{"Ref":"ParamEnvName"},"pasws","albsecgrp"]]}}],"SecurityGroupIngress":[{"IpProtocol":"tcp","FromPort":443,"ToPort":443,"Description":"Allow HTTPS from bastions 1","CidrIp":"10.153.2.192/26"},{"IpProtocol":"tcp","FromPort":443,"ToPort":443,"Description":"Allow HTTPS from bastions 2","CidrIp":"10.153.3.0/26"},{"IpProtocol":"tcp","FromPort":443,"ToPort":443,"Description":"Allow HTTPS from bastions 3","CidrIp":"10.153.3.64/26"},{"IpProtocol":"tcp","FromPort":443,"ToPort":443,"Description":"Allow HTTPS from Citrix 1","CidrIp":"10.33.20.0/23"},{"IpProtocol":"tcp","FromPort":443,"ToPort":443,"Description":"Allow HTTPS from Citrix 2","CidrIp":"10.33.19.0/23"},{"IpProtocol":"tcp","FromPort":443,"ToPort":443,"Description":"Allow HTTPS from Citrix 3","CidrIp":"10.33.212.0/23"},{"IpProtocol":"tcp","FromPort":443,"ToPort":443,"Description":"Allow HTTPS from MVNO 1","CidrIp":"172.23.41.0/24"},{"IpProtocol":"tcp","FromPort":443,"ToPort":443,"Description":"Allow HTTPS from MVNO 2","CidrIp":"172.23.42.0/24"},{"IpProtocol":"tcp","FromPort":443,"ToPort":443,"Description":"Allow HTTPS from MVNO 3","CidrIp":"172.23.44.0/24"},{"IpProtocol":"tcp","FromPort":443,"ToPort":443,"Description":"Allow HTTPS from MRTM","CidrIp":"10.45.208.4/32"},{"IpProtocol":"tcp","FromPort":443,"ToPort":443,"Description":"Allow HTTPS from VHA Jumpserver","CidrIp":"10.33.16.75/32"}]}},"ApplicationLoadBalancer":{"Type":"AWS::ElasticLoadBalancingV2::LoadBalancer","Properties":{"Name":{"Fn::Join":["-",["tpgt",{"Ref":"ParamEnvName"},"pasws","ALB"]]},"Subnets":[{"Ref":"ParamPrivateSubnetIdA"},{"Ref":"ParamPrivateSubnetIdB"}],"SecurityGroups":[{"Ref":"AlbSecurityGroup"}],"Scheme":"internal","Type":"application","IpAddressType":"ipv4","Tags":[{"Key":"Name","Value":{"Fn::Join":["-",["tpgt",{"Ref":"ParamEnvName"},"pasws","ALB"]]}}],"LoadBalancerAttributes":[{"Key":"access_logs.s3.enabled","Value":"true"},{"Key":"access_logs.s3.bucket","Value":{"Fn::Join":["",["mc-a",{"Ref":"AWS::AccountId"},"-logs-",{"Ref":"AWS::Region"}]]}},{"Key":"access_logs.s3.prefix","Value":"aws/elbaccess"}]}},"ALBTargetGroup":{"Type":"AWS::ElasticLoadBalancingV2::TargetGroup","Properties":{"Name":{"Fn::Join":["-",["tpgt",{"Ref":"ParamEnvName"},"pasws","ALBTargetGroup"]]},"HealthCheckIntervalSeconds":30,"HealthCheckPath":"/","HealthCheckPort":8443,"HealthCheckProtocol":"HTTPS","HealthCheckTimeoutSeconds":5,"HealthyThresholdCount":3,"Port":8443,"Protocol":"HTTPS","Matcher":{"HttpCode":200},"UnhealthyThresholdCount":5,"TargetGroupAttributes":[{"Key":"stickiness.enabled","Value":"true"}],"VpcId":{"Ref":"ParamVpc"},"Tags":[{"Key":"Name","Value":{"Fn::Join":["-",["tpgt",{"Ref":"ParamEnvName"},"pasws","ALBTargetGroup"]]}}]}},"ALBListener":{"Type":"AWS::ElasticLoadBalancingV2::Listener","Properties":{"DefaultActions":[{"Type":"forward","TargetGroupArn":{"Ref":"ALBTargetGroup"}}],"LoadBalancerArn":{"Ref":"ApplicationLoadBalancer"},"Port":443,"Protocol":"HTTPS","SslPolicy":"ELBSecurityPolicy-2016-08","Certificates":[{"CertificateArn":{"Ref":"ParamAcmCert"}}]}},"LoadBalancerAlias":{"Type":"AWS::Route53::RecordSet","Properties":{"AliasTarget":{"DNSName":{"Fn::GetAtt":["ApplicationLoadBalancer","DNSName"]},"HostedZoneId":{"Fn::GetAtt":["ApplicationLoadBalancer","CanonicalHostedZoneID"]},"EvaluateTargetHealth":false},"HostedZoneId":{"Ref":"ParamHostedZone"},"Name":{"Fn::Join":[".",["api",{"Ref":"ParamEnvName"},"npe.pasws.aws.vodafone.com.au"]]},"Type":"A"}},"HTTPCodeELB5XXCountApplicationLoadBalancer":{"Type":"AWS::CloudWatch::Alarm","Properties":{"AlarmActions":[{"Fn::Sub":"arn:aws:sns:${AWS::Region}:${AWS::AccountId}:MMS-Topic"}],"AlarmDescription":"Alert if number number of HTTP 5XX server error codes that originate from the load balancer.","ComparisonOperator":"GreaterThanThreshold","Dimensions":[{"Name":"LoadBalancer","Value":{"Fn::GetAtt":["ApplicationLoadBalancer","LoadBalancerFullName"]}}],"EvaluationPeriods":"5","InsufficientDataActions":[{"Fn::Sub":"arn:aws:sns:${AWS::Region}:${AWS::AccountId}:MMS-Topic"}],"TreatMissingData":"notBreaching","MetricName":"HTTPCode_ELB_5XX_Count","Namespace":"AWS/ApplicationELB","OKActions":[{"Fn::Sub":"arn:aws:sns:${AWS::Region}:${AWS::AccountId}:MMS-Topic"}],"Period":"60","Statistic":"Sum","Threshold":"0.0","Unit":"Count"}},"RejectedConnectionCountApplicationLoadBalancer":{"Type":"AWS::CloudWatch::Alarm","Properties":{"AlarmActions":[{"Fn::Sub":"arn:aws:sns:${AWS::Region}:${AWS::AccountId}:MMS-Topic"}],"AlarmDescription":"Alert if the number of connections that were rejected because the load balancer had reached its maximum number of connections.","ComparisonOperator":"GreaterThanThreshold","Dimensions":[{"Name":"LoadBalancer","Value":{"Fn::GetAtt":["ApplicationLoadBalancer","LoadBalancerFullName"]}}],"EvaluationPeriods":"5","InsufficientDataActions":[{"Fn::Sub":"arn:aws:sns:${AWS::Region}:${AWS::AccountId}:MMS-Topic"}],"TreatMissingData":"notBreaching","MetricName":"RejectedConnectionCount","Namespace":"AWS/ApplicationELB","OKActions":[{"Fn::Sub":"arn:aws:sns:${AWS::Region}:${AWS::AccountId}:MMS-Topic"}],"Period":"60","Statistic":"Sum","Threshold":"0.0","Unit":"Count"}},"TargetConnectionErrorsApplicationLoadBalancerALBTargetGroup":{"Type":"AWS::CloudWatch::Alarm","Properties":{"AlarmActions":[{"Fn::Sub":"arn:aws:sns:${AWS::Region}:${AWS::AccountId}:MMS-Topic"}],"AlarmDescription":"Alert if number of connections were not successfully established between the load balancer and the registered instances.","ComparisonOperator":"GreaterThanThreshold","Dimensions":[{"Name":"LoadBalancer","Value":{"Fn::GetAtt":["ApplicationLoadBalancer","LoadBalancerFullName"]}},{"Name":"TargetGroup","Value":{"Fn::GetAtt":["ALBTargetGroup","TargetGroupFullName"]}}],"EvaluationPeriods":"5","InsufficientDataActions":[{"Fn::Sub":"arn:aws:sns:${AWS::Region}:${AWS::AccountId}:MMS-Topic"}],"TreatMissingData":"notBreaching","MetricName":"TargetConnectionErrorCount","Namespace":"AWS/ApplicationELB","OKActions":[{"Fn::Sub":"arn:aws:sns:${AWS::Region}:${AWS::AccountId}:MMS-Topic"}],"Period":"60","Statistic":"Sum","Threshold":"0.0","Unit":"Count"}},"HTTPCodeTarget5XXCountApplicationLoadBalancerALBTargetGroup":{"Type":"AWS::CloudWatch::Alarm","Properties":{"AlarmActions":[{"Fn::Sub":"arn:aws:sns:${AWS::Region}:${AWS::AccountId}:MMS-Topic"}],"AlarmDescription":"Alert if number of HTTP 5XX response codes generated by the targets.","ComparisonOperator":"GreaterThanThreshold","Dimensions":[{"Name":"LoadBalancer","Value":{"Fn::GetAtt":["ApplicationLoadBalancer","LoadBalancerFullName"]}},{"Name":"TargetGroup","Value":{"Fn::GetAtt":["ALBTargetGroup","TargetGroupFullName"]}}],"EvaluationPeriods":"5","InsufficientDataActions":[{"Fn::Sub":"arn:aws:sns:${AWS::Region}:${AWS::AccountId}:MMS-Topic"}],"TreatMissingData":"notBreaching","MetricName":"HTTPCode_Target_5XX_Count","Namespace":"AWS/ApplicationELB","OKActions":[{"Fn::Sub":"arn:aws:sns:${AWS::Region}:${AWS::AccountId}:MMS-Topic"}],"Period":"60","Statistic":"Sum","Threshold":"0.0","Unit":"Count"}},"HealthyHostsApplicationLoadBalancerALBTargetGroup":{"Type":"AWS::CloudWatch::Alarm","Properties":{"AlarmActions":[{"Fn::Sub":"arn:aws:sns:${AWS::Region}:${AWS::AccountId}:MMS-Topic"}],"AlarmDescription":"Alert if the Application Load Balancer contains no healthy instances.","ComparisonOperator":"LessThanOrEqualToThreshold","Dimensions":[{"Name":"LoadBalancer","Value":{"Fn::GetAtt":["ApplicationLoadBalancer","LoadBalancerFullName"]}},{"Name":"TargetGroup","Value":{"Fn::GetAtt":["ALBTargetGroup","TargetGroupFullName"]}}],"EvaluationPeriods":"2","InsufficientDataActions":[{"Fn::Sub":"arn:aws:sns:${AWS::Region}:${AWS::AccountId}:MMS-Topic"}],"MetricName":"HealthyHostCount","Namespace":"AWS/ApplicationELB","OKActions":[{"Fn::Sub":"arn:aws:sns:${AWS::Region}:${AWS::AccountId}:MMS-Topic"}],"Period":"60","Statistic":"Sum","Threshold":"0.0","Unit":"Count"}}}}
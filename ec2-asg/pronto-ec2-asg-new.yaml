AWSTemplateFormatVersion: 2010-09-09
Description: EC2 with AutoScalingGroup and NetworkLoadBalancer
Parameters:
  Environment:
    Type: String
    Default: dev
  VPCParameter:
    Type: String
    Default: vf-pos-test-vpc
  PrivateSubnetA:
    Type: String
    Default: vf-pos-test-subnet-PrivateA
  PrivateSubnetB:
    Type: String
    Default: vf-pos-test-subnet-PrivateB
  PrivateSubnetC:
    Type: String
    Default: vf-pos-test-subnet-PrivateC
  NPEEC2Instance:
    Type: String
    Default: vf-pos-test-ec2-NPE
  PIEEC2Instance:
    Type: String
    Default: vf-pos-test-ec2-PIE
  NEOPILEC2Instance:
    Type: String
    Default: vf-pos-test-ec2-NEOPIL

Resources:
# Instance profile for ASG
  Ec2InstanceSecurityGroupProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - !Ref Ec2InstanceProfileRole

# Instance role for EC2 in ASG
  Ec2InstanceProfileRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - 'cloudwatch:PutMetricData'
                  - 'cloudwatch:GetMetricStatistics'
                  - 'cloudwatch:ListMetrics'
                  - 'ec2:DeleteVolume'
                  - 'ec2:DeleteSnapshot'
                  - 'ec2:DetachVolume'
                  - 'ec2:AttachVolume'
                  - 'ec2:CreateSnapshot'
                  - 'ec2:CreateVolume'
                  - 'ec2:CreateTags'
                  - 'ec2:DescribeSnapshots'
                  - 'ec2:DescribeInstances'
                  - 'ec2:DescribeVolumes'
                  - 'ec2:DescribeVpcs'
                  - 'route53:AssociateVPCWithHostedZone'
                Effect: Allow
                Resource: '*'
            Version: 2012-10-17
          PolicyName: !Sub 'vf-prontotestec2instanceprofilerole-inline-policy-${Environment}'
      RoleName: !Sub 'vf-iam-role-${Environment}'
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: 2012-10-17
      MaxSessionDuration: 3600
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess'
        - 'arn:aws:iam::aws:policy/AmazonVPCReadOnlyAccess'
        - 'arn:aws:iam::aws:policy/AmazonRoute53ReadOnlyAccess'
        - 'arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess'
      Description: Allows EC2 instances to call AWS services on your behalf.
      Tags:
        - Key: Name
          Value: !Sub 'vf-iam-role-${Environment}'
        - Key: Environment
          Value: !Sub ${Environment}
          
  EC2SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: vf-pronto-test-ec2-sg
      GroupName: vf-pronto-test-ec2-sg
      VpcId: !ImportValue
        'Fn::Sub': '${VPCParameter}'
      Tags:
        - Key: Name
          Value: !Sub 'vf-pronto-ec2-sg-${Environment}'
        - Key: Environment
          Value: !Sub ${Environment}
      SecurityGroupIngress:
        - CidrIp: 10.48.160.0/25
          Description: HTTP Only
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
        - CidrIp: 10.48.160.0/25
          Description: SSH Only
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
        - CidrIp: 10.48.160.0/25
          Description: HTTPS Only
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443

# ASG Launch Configurations below:
  NPEEC2InstanceConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: ami-0d092fa585cd2ebe2
      InstanceType: m5.large
      IamInstanceProfile:
        Ref: Ec2InstanceSecurityGroupProfile
      SecurityGroups:
      - !Ref EC2SecurityGroup
      BlockDeviceMappings:
      - DeviceName: /dev/sda1
        Ebs:
          Encrypted: true
          VolumeSize: 200
          VolumeType: gp2
          DeleteOnTermination: false
  PIEEC2InstanceConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: ami-01448715c06d2edb5
      InstanceType: t3.medium
      IamInstanceProfile:
        Ref: Ec2InstanceSecurityGroupProfile
      SecurityGroups:
      - !Ref EC2SecurityGroup
      BlockDeviceMappings:
      - DeviceName: /dev/sda1
        Ebs:
          Encrypted: true
          VolumeSize: 100
          VolumeType: gp2
          DeleteOnTermination: false
          
  NEOPILEC2InstanceConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: ami-01448715c06d2edb5
      InstanceType: t3.medium
      IamInstanceProfile:
        Ref: Ec2InstanceSecurityGroupProfile
      SecurityGroups:
      - !Ref EC2SecurityGroup
      BlockDeviceMappings:
      - DeviceName: /dev/sda1
        Ebs:
          Encrypted: true
          VolumeSize: 200
          VolumeType: gp2
          DeleteOnTermination: false

# ASG defined below:
  NPEEC2ServerGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    UpdatePolicy:
        AutoScalingRollingUpdate:
          MaxBatchSize: '1'
          MinInstancesInService: '0'
    Properties:
      LaunchConfigurationName: !Ref NPEEC2InstanceConfig
      MinSize: '1'
      MaxSize: '2'
      DesiredCapacity: '1'
      TargetGroupARNs:
        - !Ref NPEEC2NLBTargetGroup443
        - !Ref NPEEC2NLBTargetGroup22
      VPCZoneIdentifier:
      - Fn::ImportValue:
         Fn::Sub: ${PrivateSubnetA}
      
  PIEEC2ServerGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    UpdatePolicy:
        AutoScalingRollingUpdate:
          MaxBatchSize: '1'
          MinInstancesInService: '0'
    Properties:
      LaunchConfigurationName: !Ref PIEEC2InstanceConfig
      MinSize: '1'
      MaxSize: '2'
      DesiredCapacity: '1'
      TargetGroupARNs:
        - !Ref PIEEC2NLBTargetGroup443
        - !Ref PIEEC2NLBTargetGroup22
      VPCZoneIdentifier:
      - Fn::ImportValue:
         Fn::Sub: ${PrivateSubnetB}
      
  NEOPILEC2ServerGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    UpdatePolicy:
        AutoScalingRollingUpdate:
          MaxBatchSize: '1'
          MinInstancesInService: '0'
    Properties:
      LaunchConfigurationName: !Ref NEOPILEC2InstanceConfig
      MinSize: '1'
      MaxSize: '2'
      DesiredCapacity: '1'
      TargetGroupARNs:
        - !Ref NEOPILEEC2NLBTargetGroup443
        - !Ref NEOPILEEC2NLBTargetGroup22
      VPCZoneIdentifier:
      - Fn::ImportValue:
         Fn::Sub: ${PrivateSubnetC}
      

          
# Network Load Balancer below:
  NPEEC2NetworkLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: pronto-networkloadbalancer
      Scheme: internal
      Subnets:
      - Fn::ImportValue:
          Fn::Sub: ${PrivateSubnetA}
      - Fn::ImportValue:
          Fn::Sub: ${PrivateSubnetB}
      - Fn::ImportValue:
          Fn::Sub: ${PrivateSubnetC}
      Type: network
      Tags:
      - Key: Name
        Value: !Sub 'vf-pronto-networklb-${Environment}'


# NLB Target groups defined below:
  NPEEC2NLBTargetGroup443:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: pronto-networklb-target-443
      Port: 443
      Protocol: TCP
      VpcId:
        Fn::ImportValue:
          Fn::Sub: ${VPCParameter}
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: 60
      Tags:
      - Key: Name
        Value: !Sub 'vf-pronto-networklb-target-${Environment}'
  NPEEC2NLBTargetGroup22:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: pronto-networklb-target-22
      Port: 22
      Protocol: TCP
      VpcId:
        Fn::ImportValue:
          Fn::Sub: ${VPCParameter}
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: 60
      Tags:
      - Key: Name
        Value: !Sub 'vf-pronto-networklb-target-${Environment}'
        
# NLB Listeners defined below:
  NPEEC2NetworkLoadBalancerListener443:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref NPEEC2NLBTargetGroup443
      LoadBalancerArn: !Ref NPEEC2NetworkLoadBalancer
      Port: 443
      Protocol: TLS
      Certificates:
      - CertificateArn: arn:aws:acm:ap-southeast-2:324063706331:certificate/12051ece-0ab9-46f6-a282-e56a1a000cf9
  NPEEC2NetworkLoadBalancerListener22:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref NPEEC2NLBTargetGroup22
      LoadBalancerArn: !Ref NPEEC2NetworkLoadBalancer
      Port: 22
      Protocol: TCP

# Network Load Balancer below:
  PIEEC2NetworkLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: PIE-networkloadbalancer
      Scheme: internal
      Subnets:
      - Fn::ImportValue:
          Fn::Sub: ${PrivateSubnetA}
      - Fn::ImportValue:
          Fn::Sub: ${PrivateSubnetB}
      - Fn::ImportValue:
          Fn::Sub: ${PrivateSubnetC}
      Type: network
      Tags:
      - Key: Name
        Value: !Sub 'vf-PIE-networklb-${Environment}'


# NLB Target groups defined below:
  PIEEC2NLBTargetGroup443:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: PIE-networklb-target-443
      Port: 443
      Protocol: TCP
      VpcId:
        Fn::ImportValue:
          Fn::Sub: ${VPCParameter}
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: 60
      Tags:
      - Key: Name
        Value: !Sub 'vf-PIE-networklb-target-${Environment}'
  PIEEC2NLBTargetGroup22:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: PIE-networklb-target-22
      Port: 22
      Protocol: TCP
      VpcId:
        Fn::ImportValue:
          Fn::Sub: ${VPCParameter}
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: 60
      Tags:
      - Key: Name
        Value: !Sub 'vf-PIE-networklb-target-${Environment}'
        
# NLB Listeners defined below:
  PIEEC2NetworkLoadBalancerListener443:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref PIEEC2NLBTargetGroup443
      LoadBalancerArn: !Ref PIEEC2NetworkLoadBalancer
      Port: 443
      Protocol: TLS
      Certificates:
      - CertificateArn: arn:aws:acm:ap-southeast-2:324063706331:certificate/12051ece-0ab9-46f6-a282-e56a1a000cf9
  PIEEC2NetworkLoadBalancerListener22:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref PIEEC2NLBTargetGroup22
      LoadBalancerArn: !Ref PIEEC2NetworkLoadBalancer
      Port: 22
      Protocol: TCP

          
# Network Load Balancer below:
  NEOPILEEC2NetworkLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: NEOPIL-networkloadbalancer
      Scheme: internal
      Subnets:
      - Fn::ImportValue:
          Fn::Sub: ${PrivateSubnetA}
      - Fn::ImportValue:
          Fn::Sub: ${PrivateSubnetB}
      - Fn::ImportValue:
          Fn::Sub: ${PrivateSubnetC}
      Type: network
      Tags:
      - Key: Name
        Value: !Sub 'vf-NEOPIL-networklb-${Environment}'


# NLB Target groups defined below:
  NEOPILEEC2NLBTargetGroup443:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: NEOPIL-networklb-target-443
      Port: 443
      Protocol: TCP
      VpcId:
        Fn::ImportValue:
          Fn::Sub: ${VPCParameter}
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: 60
      Tags:
      - Key: Name
        Value: !Sub 'vf-NEOPIL-networklb-target-${Environment}'
  NEOPILEEC2NLBTargetGroup22:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: NEOPIL-networklb-target-22
      Port: 22
      Protocol: TCP
      VpcId:
        Fn::ImportValue:
          Fn::Sub: ${VPCParameter}
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: 60
      Tags:
      - Key: Name
        Value: !Sub 'vf-NEOPIL-networklb-target-${Environment}'
        
# NLB Listeners defined below:
  NEOPILEEC2NetworkLoadBalancerListener443:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref NEOPILEEC2NLBTargetGroup443
      LoadBalancerArn: !Ref NEOPILEEC2NetworkLoadBalancer
      Port: 443
      Protocol: TLS
      Certificates:
      - CertificateArn: arn:aws:acm:ap-southeast-2:324063706331:certificate/12051ece-0ab9-46f6-a282-e56a1a000cf9
  NEOPILEEC2NetworkLoadBalancerListener22:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref NEOPILEEC2NLBTargetGroup22
      LoadBalancerArn: !Ref NEOPILEEC2NetworkLoadBalancer
      Port: 22
      Protocol: TCP

Outputs:
  ProntoNLBDNSNames:
    Value: 
      Fn::GetAtt: ["NPEEC2NetworkLoadBalancer","DNSName"]   
    Description: Network NLB DNSNames
    Export:
      Name: !Sub 'vf-Pronto-networklb-dns-${Environment}'
  PIENLBDNSNames:
    Value: 
      Fn::GetAtt: ["PIEEC2NetworkLoadBalancer","DNSName"]   
    Description: Network NLB DNSNames
    Export:
      Name: !Sub 'vf-PIE-networklb-dns-${Environment}'
  NEOPILNLBDNSNames:
    Value: 
      Fn::GetAtt: ["NEOPILEEC2NetworkLoadBalancer","DNSName"]   
    Description: Network NLB DNSNames
    Export:
      Name: !Sub 'vf-NEOPIL-networklb-dns-${Environment}'